<?php
App::uses('AppController', 'Controller');
require_once APP.'/../vendor/autoload.php'; // load composer
use Goodby\CSV\Import\Standard\Lexer;
use Goodby\CSV\Import\Standard\Interpreter;
use Goodby\CSV\Import\Standard\LexerConfig;

/**
 * Courses Controller
 *
 * @property Course $Course
 * @property PaginatorComponent $Paginator
 * @property SessionComponent $Session
 */
class CoursesController extends AppController {
/**
 * Models
 *
 * @var array
 */
	public $uses = array('Course','Sector','Excel');
/**
 * Components
 *
 * @var array
 */
	public $components = array('Paginator', 'Session');

/**
 * index method
 *
 * @return void
 */
	public function index() {
		$this->Course->recursive = 0;
		$this->set('courses', $this->Paginator->paginate());
	}

/**
 * view method
 *
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function view($id = null) {
		if (!$this->Course->exists($id)) {
			throw new NotFoundException(__('Invalid course'));
		}
		$options = array('conditions' => array('Course.' . $this->Course->primaryKey => $id));
		$this->set('course', $this->Course->find('first', $options));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		$sectors = $this->Sector->find('list',['fields'=>['Id','SectorName']]);
		$this->set('sectors',$sectors);
		if ($this->request->is('post')) {
			$this->Course->create();
			if ($this->Course->save($this->request->data)) {
				$this->Session->setFlash(__('The course has been saved.'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The course could not be saved. Please, try again.'));
			}
		}
	}

/**
 * edit method
 *
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function edit($id = null) {
		$sectors = $this->Sector->find('list',['fields'=>['Id','SectorName']]);
		$this->set('sectors',$sectors);
		if (!$this->Course->exists($id)) {
			throw new NotFoundException(__('Invalid course'));
		}
		if ($this->request->is(array('post', 'put'))) {
			if ($this->Course->save($this->request->data)) {
				$this->Session->setFlash(__('The course has been saved.'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The course could not be saved. Please, try again.'));
			}
		} else {
			$options = array('conditions' => array('Course.' . $this->Course->primaryKey => $id));
			$this->request->data = $this->Course->find('first', $options);
		}
	}

/**
 * delete method
 *
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function delete($id = null) {
		$this->Course->id = $id;
		if (!$this->Course->exists()) {
			throw new NotFoundException(__('Invalid course'));
		}
		$this->request->allowMethod('post', 'delete');
		if ($this->Course->delete()) {
			$this->Session->setFlash(__('The course has been deleted.'));
		} else {
			$this->Session->setFlash(__('The course could not be deleted. Please, try again.'));
		}
		return $this->redirect(array('action' => 'index'));
	}
/**
 * uploadExcel method
 *
 * @throws NotFoundException
 * @param string $id
 * @return void
 */
	public function uploadExcel($id = null) {
	    if ($this->request->is(array('post', 'put'))) {
		if (!empty($this->request->data['Course']['UploadExcel']['name'])) {
			$name = $this->request->data['Course']['UploadExcel']['name'];
			$name_arr = explode('.',$name);
			$ext = end($name_arr);
			if($ext=='csv' && $this->request->data['Course']['UploadExcel']['type']=='text/csv'){			
				$filePath = $this->request->data['Course']['UploadExcel']['tmp_name'];
				$config = new LexerConfig();
				$lexer = new Lexer($config);
				$data = [];
				$emptyData = [];
				$header = [];
				$i = 1;
				$interpreter = new Interpreter();
				$interpreter->addObserver(function(array $row) use (&$data, &$i, &$emptyData,&$header) {
				   if(!empty($row[0])){
					    if($i===1){
						$header[] = preg_replace("/[^a-zA-Z 0-9]+/", "", $row);
					    }
					    else {
						    $data[] = array(
							'id' => preg_replace("/[^a-zA-Z 0-9]+/", "", $row[0]),
							'courseName' => preg_replace("/[^a-zA-Z 0-9]+/", "", $row[1]),
							'sectorName' => preg_replace("/[^a-zA-Z 0-9]+/", "", $row[2]),
							'index' => $i
						    );
					   }
				    }
				    else {
					$emptyData[] = array(
						'index' => $i
					    );
				    }
				    $i++;
				});	
				$lexer->parse($filePath, $interpreter);	
				$this->Excel->save(
					array( 
						'Excel' => 
						     array(
							'ExcelName' => $name,
							'Created' => date('Y-m-d h:i:s')
						     )
					)
				);
				$excelId = $this->Excel->getLastInsertId();
				$c = 0;
				$noId_arr = [];
				foreach($data as $key=>$val){
					$sectorId = $this->Sector->getSectorId($val['sectorName']);
					if(!empty($sectorId) && !empty($val['id'])){
						$this->Course->create();
						$arr = array( 
								'Course' => 
								     array(
									'SectorId' => $sectorId,
									'Id' => $val['id'],
									'CourseName' => $val['courseName'],
									'Created' => date('Y-m-d h:i:s'),
									'ExcelId' => $excelId
								     )
							);
						if($this->Course->save($arr)){
							$c++;
						}
					}
					else {
						$noId_arr[] = $val;
					}
				}
				$this->Session->setFlash('Data Import Successfull. Rows Imported ('.$c.'), Rows Skipped ('.(count($data)-$c).'), Course Id or Sector not found ('.count($noId_arr).') and Empty Rows ('.count($emptyData).')');
				
			}
			else {
				$this->Session->setFlash('Invalid File Format. Upload only CSV file.');
			}
		} else {
			$this->Session->setFlash('No file found. Please upload CSV file.');
		}
	    }
	}
}
